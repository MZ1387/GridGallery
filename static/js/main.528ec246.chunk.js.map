{"version":3,"sources":["Profile/ProfileImage.js","Profile/UserGrid.js","Posts/index.js","Gallery/Gallery.js","Modal/PostGrid.js","Modal/Modal.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","props","mini","css","_templateObject2","UserGridStyled","UserGrid_templateObject","MiniUserGridStyled","UserGrid_templateObject2","Photo","_templateObject3","Name","_templateObject4","Label","_templateObject5","Description","_templateObject6","UserGrid","react_default","a","createElement","ProfileImage","Posts","id","title","PhotoGrid","Gallery_templateObject","cascade","Gallery_templateObject2","LinkGrid","Gallery_templateObject3","TabLink","Link","Gallery_templateObject4","selected","Gallery_templateObject5","ImageLink","Gallery_templateObject6","index","_templateObject7","Gallery","_ref","match","location","search","to","concat","url","pathname","map","i","key","state","modal","PostGrid","PostGrid_templateObject","InfoGrid","PostGrid_templateObject2","OverflowHidden","createGlobalStyle","Modal_templateObject","ModalStyled","Modal_templateObject2","top","Modal","_ref2","history","image","parseInt","params","onClick","e","stopPropagation","goBack","style","position","left","bottom","right","height","background","window","scrollY","innerHeight","Image","inModal","ModalSwitch","previousLocation","_this","nextProps","this","action","isModal","Switch","Route","exact","path","component","React","Component","App_templateObject","App_templateObject2","ModalGallery","BrowserRouter","Boolean","hostname","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.528ec246.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nexport default styled.div`\n    width: 200px;\n    height: 200px;\n    background: no-repeat center/170% url(/img/profile.jpeg);\n    border-radius: 100px;\n    margin: 40px;\n\n    @media (max-width: 990px) {\n        width: 120px;\n        height: 120px;\n        margin: 20px;\n    }\n\n    ${(props) =>  props.mini && css`\n        width: 50px;\n        height: 50px;\n        margin: 5px;\n\n        @media (max-width: 990px) {\n            width: 30px;\n            height: 50px;\n            margin: 5px;\n        }\n    `}\n`;\n","import React from \"react\";\nimport styled from 'styled-components';\nimport ProfileImage from \"./ProfileImage\";\n\nconst UserGridStyled = styled.div`\n    display: grid;\n    justify-content: center;\n    margin-top: 80px;\n    margin-bottom: 50px;\n    gap: 15px;\n    grid-template-areas: \n        'photo name'\n        'photo label'\n        'photo description';\n    \n    @media (max-width: 990px) {\n        grid-template-areas: \n            'photo name'\n            'label .'\n            'description .';\n    }\n`;\n\nexport const MiniUserGridStyled = styled.div`\n    display: grid;\n    justify-content: left;\n    grid-template-columns: auto auto;\n    gap: 10px;\n`;\n\nconst Photo = styled.div`\n    grid-area: photo;\n`;\n\nconst Name = styled.div`\n    grid-area: name;\n    font-size: 35px;\n    align-self: center;\n`;\n\nconst Label = styled.div`\n    grid-area: label; \n    \n    @media (max-width: 990px) {\n        padding-left: 25px;\n    }\n`;\n\nconst Description = styled.div`\n    grid-area: description;\n    max-width: 400px;\n\n    @media (max-width: 990px) {\n        padding-left: 25px;\n        grid-column: 1 / 3;\n    }\n`;\n\n\nexport default () => {\n    return (\n        <UserGridStyled>\n            <Photo>\n                <ProfileImage />\n            </Photo>\n            <Name>Mario Zamora</Name>\n            <Label>\n                <strong>13,000</strong> Followers\n            </Label>\n            <Description>\n                Hoodie artisan wayfarers kitsch gentrify hella deep v. Hella hammock hexagon helvetica leggings, organic jean shorts slow-carb readymade letterpress wolf. Live-edge sartorial freegan kickstarter kombucha. Subway tile whatever wolf sriracha you probably haven't heard of them brooklyn franzen flexitarian keffiyeh gluten-free iPhone roof party. Hashtag pug hot chicken shabby chic crucifix franzen sartorial copper mug drinking vinegar helvetica.\n            </Description>\n        </UserGridStyled>\n    );\n}","export default [\n    { id: 1, title: \"Blue Palms\" },\n    { id: 2, title: \"Purple Palms\" },\n    { id: 3, title: \"Desert Palms\" },\n    { id: 4, title: \"Sunset Palms\" },\n    { id: 5, title: \"Yellow Red Flowers\" },\n    { id: 6, title: \"Mountain Lake\" },\n    { id: 7, title: \"Ocean Resort\" },\n    { id: 8, title: \"Crane\" },\n    { id: 9, title: \"Ocean\" },\n    { id: 10, title: \"Lunch\" },\n    { id: 11, title: \"Card\" },\n    { id: 12, title: \"Valley\" },\n    { id: 13, title: \"Blue Branch\" }\n  ];","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport UserGrid from '../Profile/UserGrid';\nimport Posts from '../Posts';\n\nconst PhotoGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 305px);\n    justify-content: center;\n    gap: 20px;\n    grid-auto-rows: 305px;\n    ${(props) => props.cascade && css`\n        grid-auto-rows: 200px;\n        grid-gap: 5px;\n    `}\n\n    @media (max-width: 990px) {\n        gap: 5px;\n        grid-template-columns: repeat(3, 1fr);\n        grid-auto-rows: calc(33vw - 10px);\n    }\n`;\n\nconst LinkGrid = styled.div`\n    display: grid;\n    grid-template-columns: auto auto;\n    justify-content: center;\n    gap: 20px;\n    margin-bottom: 20px\n`;\n\nconst TabLink = styled(Link)`\n    text-decoration: none;\n    color: #ccc;\n    text-transform: uppercase;\n    letter-spacing: 3px;\n    ${(props) => props.selected && css`\n        color: black;\n    `}\n`;\n\nconst ImageLink = styled(Link)`\n  background: no-repeat center/150% url(/img/${(props) => props.index}.jpeg);\n  :hover {\n    opacity: .7;\n  }\n\n  ${(props) => props.cascade && css`\n    background-size: cover;\n\n    &:nth-of-type(2n) {\n      grid-row-start: span 2;\n    }\n  `}\n`;\n\nexport default ({ match, location }) => {\n    const cascade = location.search === '?type=cascade';\n    return (\n        <div>\n        <UserGrid />\n        <LinkGrid>\n            <TabLink\n                selected={!cascade}\n                to={`${match.url}`}\n            >\n                Square\n            </TabLink>\n            <TabLink\n                selected={cascade}\n                to={{ pathname: `${match.url}`, search:\"?type=cascade\" }}\n            >\n                Cascade\n            </TabLink>\n        </LinkGrid>\n        <PhotoGrid cascade={cascade}>\n            {Posts.map(i => (\n            <ImageLink\n                key={i.id}\n                index={i.id}\n                cascade={cascade}\n                to={{\n                pathname: `/img/ ${i.id}`,\n                // this is the trick!\n                state: { modal: true }\n                }}\n            />\n            ))}\n        </PhotoGrid>\n        </div>\n    );\n}\n","import styled from 'styled-components';\n\nexport const PostGrid =  styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n\n    @media (max-width: 990px) {\n        grid-template-columns: 1fr; \n    }   \n`;\n\nexport const InfoGrid =  styled.div`\n    padding: 20px;\n    display: grid;\n    grid-template-rows: 60px auto 40px;\n`;","import React from \"react\";\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Image } from '../App';\nimport Posts from '../Posts';\nimport { PostGrid, InfoGrid } from './PostGrid';\nimport { MiniUserGridStyled } from '../Profile/UserGrid';\nimport ProfileImage from '../Profile/ProfileImage';\n\nconst OverflowHidden = createGlobalStyle`\n    body {\n        overflow: hidden;\n    }\n`;\n\nconst ModalStyled = styled.div`\n  position: absolute;\n  background: #fff;\n  top: ${(props) => props.top}px;\n  left: 25%;\n  right: 25%;\n  width: 600px;\n  border: 2px solid #444;\n\n  @media(max-width: 990px){\n    left: 0; \n    right: 0; \n    top: ${({top}) => top}px; \n    width: auto; \n  }\n`;\n\nconst Modal = ({ match, history }) => {\n    let image = Posts[parseInt(match.params.id, 10) - 1];\n  \n    if (!image) return null;\n  \n    let back = e => {\n      e.stopPropagation();\n      history.goBack();\n    };\n  \n    return (\n      <div\n        onClick={back}\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          height: '5000px',\n          background: \"rgba(0, 0, 0, 0.8)\"\n        }}\n      >\n        <ModalStyled\n            top={window.scrollY + (window.innerHeight / 2) - 250}\n        >\n            <OverflowHidden />\n            <PostGrid>\n                <Image inModal index={image.id} />\n                <InfoGrid>\n                    <MiniUserGridStyled>\n                        <ProfileImage mini />\n                        <h3>User Name</h3>\n                    </MiniUserGridStyled>\n                    <div>\n                        <h2>{image.title}</h2>\n                    </div>\n                    <div>13 Likes</div>\n                </InfoGrid>\n            </PostGrid>\n        </ModalStyled>\n      </div>\n    );\n  };\n\n  export default Modal;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled, { css } from 'styled-components';\nimport Gallery from \"./Gallery/Gallery\";\nimport Modal from './Modal/Modal';\nimport Posts from './Posts';\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same url,\n// depending on how you got there.\n//\n// Click the colors and see them full screen, then \"visit the\n// gallery\" and click on the colors. Note the URL and the component\n// are the same as before but now we see them inside a modal\n// on top of the old screen.\n\nclass ModalSwitch extends React.Component {\n  // We can pass a location to <Switch/> that will tell it to\n  // ignore the router's current location and use the location\n  // prop instead.\n  //\n  // We can also use \"location state\" to tell the app the user\n  // wants to go to `/img/2` in a modal, rather than as the\n  // main page, keeping the gallery visible behind it.\n  //\n  // Normally, `/img/2` wouldn't match the gallery at `/`.\n  // So, to get both screens to render, we can save the old\n  // location and pass it to Switch, so it will think the location\n  // is still `/` even though its `/img/2`.\n  previousLocation = this.props.location;\n\n  componentWillUpdate(nextProps) {\n    let { location } = this.props;\n\n    // set previousLocation if props.location is not modal\n    if (\n      nextProps.history.action !== \"POP\" &&\n      (!location.state || !location.state.modal)\n    ) {\n      this.previousLocation = this.props.location;\n    }\n  }\n\n  render() {\n    let { location } = this.props;\n\n    let isModal = !!(\n      location.state &&\n      location.state.modal &&\n      this.previousLocation !== location\n    ); // not initial render\n\n    return (\n      <div>\n        <Switch location={isModal ? this.previousLocation : location}>\n          <Route exact path=\"/\" component={Gallery} />\n          <Route path=\"/img/:id\" component={Modal} />\n        </Switch>\n        {isModal ? <Route path=\"/img/:id\" component={Modal} /> : null}\n      </div>\n    );\n  }\n};\n\nexport const Image = styled.div`\n  width: 305px;\n  height: 305px;\n\n  @media (max-width: 990px) {\n    width: 100%;\n  }\n\n  background: no-repeat center/150% url(/img/${(props) => props.index}.jpeg);\n  ${(props) => !props.inModal && css`\n    :hover {\n      opacity: .7;\n    }\n  `}\n`;\n\nfunction ModalGallery() {\n  return (\n    <Router>\n      <Route component={ModalSwitch} />\n    </Router>\n  );\n}\n\nexport default ModalGallery;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}